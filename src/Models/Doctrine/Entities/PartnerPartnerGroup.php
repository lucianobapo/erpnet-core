<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 2.1.6-dev (doctrine2-annotation) on 2016-02-25 22:56:30.
 * Goto https://github.com/johmue/mysql-workbench-schema-exporter for more
 * information.
 */

namespace ErpNET\App\Models\Doctrine\Entities;

use Doctrine\ORM\Mapping as ORM;
use Gedmo\Mapping\Annotation as Gedmo;

/**
 * ErpNET\App\Models\Doctrine\Entities\PartnerPartnerGroup
 *
 * @Gedmo\SoftDeleteable(fieldName="deletedAt", timeAware=false)
 * @ORM\Entity(repositoryClass="PartnerPartnerGroupRepository")
 * @ORM\Table(name="partner_partner_group", indexes={@ORM\Index(name="partner_partner_group_partner_id_index", columns={"partner_id"}), @ORM\Index(name="partner_partner_group_partner_group_id_index", columns={"partner_group_id"})})
 */
class PartnerPartnerGroup extends EntityBase
{
    /**
     * @ORM\Id
     * @ORM\Column(type="integer", options={"unsigned":true})
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @ORM\Column(type="integer", options={"unsigned":true})
     */
    protected $partner_id;

    /**
     * @ORM\Column(type="integer", options={"unsigned":true})
     */
    protected $partner_group_id;

    /**
     * @ORM\ManyToOne(targetEntity="Partner", inversedBy="partnerPartnerGroups")
     * @ORM\JoinColumn(name="partner_id", referencedColumnName="id", nullable=false)
     */
    protected $partner;

    /**
     * @ORM\ManyToOne(targetEntity="PartnerGroup", inversedBy="partnerPartnerGroups")
     * @ORM\JoinColumn(name="partner_group_id", referencedColumnName="id", nullable=false)
     */
    protected $partnerGroup;

    public function __construct()
    {
    }

    /**
     * Set the value of id.
     *
     * @param integer $id
     * @return \ErpNET\App\Models\Doctrine\Entities\PartnerPartnerGroup
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Get the value of id.
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set the value of partner_id.
     *
     * @param integer $partner_id
     * @return \ErpNET\App\Models\Doctrine\Entities\PartnerPartnerGroup
     */
    public function setPartnerId($partner_id)
    {
        $this->partner_id = $partner_id;

        return $this;
    }

    /**
     * Get the value of partner_id.
     *
     * @return integer
     */
    public function getPartnerId()
    {
        return $this->partner_id;
    }

    /**
     * Set the value of partner_group_id.
     *
     * @param integer $partner_group_id
     * @return \ErpNET\App\Models\Doctrine\Entities\PartnerPartnerGroup
     */
    public function setPartnerGroupId($partner_group_id)
    {
        $this->partner_group_id = $partner_group_id;

        return $this;
    }

    /**
     * Get the value of partner_group_id.
     *
     * @return integer
     */
    public function getPartnerGroupId()
    {
        return $this->partner_group_id;
    }

    /**
     * Set Partner entity (many to one).
     *
     * @param \ErpNET\App\Models\Doctrine\Entities\Partner $partner
     * @return \ErpNET\App\Models\Doctrine\Entities\PartnerPartnerGroup
     */
    public function setPartner(Partner $partner = null)
    {
        $this->partner = $partner;

        return $this;
    }

    /**
     * Get Partner entity (many to one).
     *
     * @return \ErpNET\App\Models\Doctrine\Entities\Partner
     */
    public function getPartner()
    {
        return $this->partner;
    }

    /**
     * Set PartnerGroup entity (many to one).
     *
     * @param \ErpNET\App\Models\Doctrine\Entities\PartnerGroup $partnerGroup
     * @return \ErpNET\App\Models\Doctrine\Entities\PartnerPartnerGroup
     */
    public function setPartnerGroup(PartnerGroup $partnerGroup = null)
    {
        $this->partnerGroup = $partnerGroup;

        return $this;
    }

    /**
     * Get PartnerGroup entity (many to one).
     *
     * @return \ErpNET\App\Models\Doctrine\Entities\PartnerGroup
     */
    public function getPartnerGroup()
    {
        return $this->partnerGroup;
    }

    public function __sleep()
    {
        return array('id', 'created_at', 'updated_at', 'partner_id', 'partner_group_id');
    }
}