<?php

/**
 * Auto generated by MySQL Workbench Schema Exporter.
 * Version 2.1.6-dev (doctrine2-annotation) on 2016-02-25 22:56:30.
 * Goto https://github.com/johmue/mysql-workbench-schema-exporter for more
 * information.
 */

namespace ErpNET\App\Models\Doctrine\Entities;

use Doctrine\ORM\Mapping as ORM;
use ErpNET\App\Models\Doctrine\CustomTraits\MandanteTrait;
use Gedmo\Mapping\Annotation as Gedmo;

/**
 * ErpNET\App\Models\Doctrine\Entities\Contact
 *
 * @Gedmo\SoftDeleteable(fieldName="deletedAt", timeAware=false)
 * @ORM\Entity(repositoryClass="ContactRepository")
 * @ORM\Table(name="contacts", indexes={@ORM\Index(name="contacts_mandante_index", columns={"mandante"}), @ORM\Index(name="contacts_partner_id_index", columns={"partner_id"})})
 */
class Contact extends EntityBase
{
    use MandanteTrait;

    /**
     * @ORM\Id
     * @ORM\Column(type="integer", options={"unsigned":true})
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @ORM\Column(type="integer", nullable=true, options={"unsigned":true})
     */
    protected $partner_id;

    /**
     * @ORM\Column(type="string")
     */
    protected $contact_type;

    /**
     * @ORM\Column(type="string", length=255)
     */
    protected $contact_data;

    /**
     * @ORM\ManyToOne(targetEntity="Partner", inversedBy="contacts")
     * @ORM\JoinColumn(name="partner_id", referencedColumnName="id")
     */
    protected $partner;

    public function __construct()
    {
    }

    /**
     * Set the value of id.
     *
     * @param integer $id
     * @return \ErpNET\App\Models\Doctrine\Entities\Contact
     */
    public function setId($id)
    {
        $this->id = $id;

        return $this;
    }

    /**
     * Get the value of id.
     *
     * @return integer
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set the value of partner_id.
     *
     * @param integer $partner_id
     * @return \ErpNET\App\Models\Doctrine\Entities\Contact
     */
    public function setPartnerId($partner_id)
    {
        $this->partner_id = $partner_id;

        return $this;
    }

    /**
     * Get the value of partner_id.
     *
     * @return integer
     */
    public function getPartnerId()
    {
        return $this->partner_id;
    }

    /**
     * Set the value of contact_type.
     *
     * @param string $contact_type
     * @return \ErpNET\App\Models\Doctrine\Entities\Contact
     */
    public function setContactType($contact_type)
    {
        $this->contact_type = $contact_type;

        return $this;
    }

    /**
     * Get the value of contact_type.
     *
     * @return string
     */
    public function getContactType()
    {
        return $this->contact_type;
    }

    /**
     * Set the value of contact_data.
     *
     * @param string $contact_data
     * @return \ErpNET\App\Models\Doctrine\Entities\Contact
     */
    public function setContactData($contact_data)
    {
        $this->contact_data = $contact_data;

        return $this;
    }

    /**
     * Get the value of contact_data.
     *
     * @return string
     */
    public function getContactData()
    {
        return $this->contact_data;
    }

    /**
     * Set Partner entity (many to one).
     *
     * @param \ErpNET\App\Models\Doctrine\Entities\Partner $partner
     * @return \ErpNET\App\Models\Doctrine\Entities\Contact
     */
    public function setPartner(Partner $partner = null)
    {
        $this->partner = $partner;

        return $this;
    }

    /**
     * Get Partner entity (many to one).
     *
     * @return \ErpNET\App\Models\Doctrine\Entities\Partner
     */
    public function getPartner()
    {
        return $this->partner;
    }

    public function __sleep()
    {
        return array('id', 'created_at', 'updated_at', 'deleted_at', 'mandante', 'partner_id', 'contact_type', 'contact_data');
    }
}